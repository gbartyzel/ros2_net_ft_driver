name: Build Rolling

on:
  workflow_dispatch:
    branches:
      - rolling
  pull_request:
    branches:
      - rolling
  push:
    branches:
      - rolling

jobs:
  industrial_ci:
    name: rolling-main
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        env:
          - ROS_DISTRO: rolling
            ROS_REPO: main
    env:
      BEFORE_INSTALL_TARGET_DEPENDENCIES: 'sudo apt-get -qq update && sudo apt-get install -y pkg-config libasio-dev libcurlpp-dev libcurl4-openssl-dev'
      BEFORE_SETUP_UPSTREAM_WORKSPACE: 'sudo apt-get -qq install -y --no-upgrade --no-install-recommends git && git config --global --add safe.directory "*"'
      UPSTREAM_WORKSPACE: ros2_net_ft_driver.rolling.repos
      AFTER_SETUP_UPSTREAM_WORKSPACE: 'vcs pull $BASEDIR/upstream_ws/src'
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      BASEDIR: ${{ github.workspace }}/.work
      CACHE_PREFIX: rolling-main
    steps:
      - uses: actions/checkout@v3
      - name: cache upstream_ws
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ env.BASEDIR }}/upstream_ws
          key: upstream_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('ros2_net_ft_driver.rolling.repos') }}-${{ github.run_id }}
          restore-keys: |
            upstream_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('ros2_net_ft_driver.rolling.repos') }}
      # The target directory cache doesn't include the source directory because
      # that comes from the checkout.  See "prepare target_ws for cache" task below
      - name: cache target_ws
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ env.BASEDIR }}/target_ws
          key: target_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}-${{ github.run_id }}
          restore-keys: |
            target_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}
      - name: cache ccache
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}
            ccache-${{ env.CACHE_PREFIX }}
      - name: industrial_ci
        uses: "ros-industrial/industrial_ci@master"
        env: ${{ matrix.env }}
      - name: upload test artifacts (on failure)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: ${{ env.BASEDIR }}/target_ws/**/test_results/**/*.xml
      - name: prepare target_ws for cache
        if: ${{ always()}}
        run: |
          du -sh ${{ env.BASEDIR }}/target_ws
          sudo find ${{ env.BASEDIR }}/target_ws -wholename '*/test_results/*' -delete
          sudo rm -rf ${{ env.BASEDIR }}/target_ws/src
          du -sh ${{ env.BASEDIR }}/target_ws
